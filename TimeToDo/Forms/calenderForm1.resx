<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfoDAwGKzoNFDmfAAAEUUlEQVRYR+2WSYhdRRSGqzuTGs0g
        imAcMBsxm05cOG9ciURxWGhM97u3btUd6r7OSxCHKEQ3ijgs3AkqioIoLgQXMcSAWTiAhihIIOJGUIMI
        gvM80H5/dUVDaBt9t7vd9IGPuu/deqfOO+c/VWUWbdHm2zLXmnHIhQ8zkqWx9ZWpfJ1+OQ+W+9Y4N4gL
        ZmWjRZdlZVib+eYsvjuPz2fmZVjN89K/gysZJ5OHOTYFlPuGRdoTWewiuAdehbfh3TS+AnfChXCC5ucx
        qJC8zIFZnBakXk55Pp3xVngffoav4AN4Bz6Eb+EneA9aWAWxxNb2k8cOZotgXFmZrJBuwmk4vx++hO/h
        JejBZXA+XAEBXoNf4TPYQRlTpuZATy6f1oJ14WTGnaBgPoLbYZ1t65Hc95lDwHXMxCiLr4eHeP85fAxb
        86JZBsbmHYPqEUzhYlCXgEqjkmzPXFgRu6nUO0pq0QnZ5J00pu/W8PwgqHxvwAWa2zkgusj0qrAEh7cl
        5y9aH86InUagx1uBgG3SG2yAN+FrqIp6cjQv2zRzSJNjFl/J+AJ8B46sUaZ/7hq9m9YMZfLhXpCenqLs
        q/kzadaQJudkSZ31OkgPVxX1IC44mxVVY+p+bPfr4RvYQ1OsY0wzhjQ5gHPgAByGS3tlP24Fs9kxZbsc
        JG513rn6rpPJAaxNDo/A5pv9gAVnd1zkpTFTU/rtFtAW8SwZWgNpxpCGI6Gd+Wn4AbZTLok8Cngmk9j1
        Hk6CR+BH2DXuqiUcM2nWkCbH7NISsQf90/0EtF6tfbQsx5o+K6Ci+qtch+AILb85Hshoq5NZHaK0Kg7V
        wm8BHaNNL+4z2r3jbj41td9MWDa+6cyIs+E5+AWeYT6N0ZiJtuPxIfHGza8Ky3Hs4FOQSLXpbSCg5daG
        kYI543kzQkAqrw7Wx0H7D3tX28/9Dv5ca3rs1nfvvCN5H9K2koW4K/twCmwDHR3ShTL2AHjeX0epap4f
        hYOg9+IP2GfLMNZz/DnoFR1365IzaoKyxHKU7QoWuAF07fgCVBItLH1pJ9fzJ/AENLAPfoe9/H7jLZTV
        IYOmssn7kKYzTeBYZ5a6TBeym+A+eBK0kz8Gd1Hiq+FUnilTGGPcCwp8D4xdm+0yjobIuLhVZZ5WGNIk
        4qMUWtBNLrW+XcVnXU1W5v3+aLxNoqlCmqFEykwK5jfQBW7sRjvJ73kPnc1vC8YPkq508YojaNSJTiBl
        mBawNKMyKYgUjDK1m2bZtKUYxD/l5+uKe7ypmyRgaUZlSkHtBumMoNqNtR+MOO5TvbI23s3BjfLfmAQs
        zahMykwKSg3wMtnddPCa5yl9Y8a5mS6YScDSjMqkzCgYSJkKFxdOx1HHXfy/mLpJApZmVCZlRsGAbqAP
        kyFdkdPsBTQJWJqJZSIzCoaGuJKtZFSN8b+YBCzNqEwxMwSj85AbZZqxwKZukoClGZVJmVEwM93RF23R
        upkxfwLwCoYTYW6nIgAAAABJRU5ErkJggg==
</value>
  </data>
</root>